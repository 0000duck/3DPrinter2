<ListView x:Class="_3DPrinter.view.menu.MenuApp"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:menu="clr-namespace:_3DPrinter.view.menu"
             mc:Ignorable="d" SelectionMode="Single" Background="{StaticResource WindowBackColor}" Margin="0" Padding="0" BorderThickness="0">

    <ListView.Template>
        <ControlTemplate>
            <Border BorderThickness="0" Margin="0" Padding="0" Background="{TemplateBinding Background}">
                <ItemsPresenter/>
            </Border>
        </ControlTemplate>
    </ListView.Template>

    <ListView.ItemsPanel>
        <ItemsPanelTemplate>
            <WrapPanel  Margin="0" HorizontalAlignment="Stretch"/>
        </ItemsPanelTemplate>
    </ListView.ItemsPanel>

    <ListView.ItemContainerStyle>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Height" Value="50"/>
            <Setter Property="FontFamily" Value="Segoe UI Light"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Background" Value="{StaticResource WindowButtonColor}"/>
            <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <ToggleButton Background="Transparent" BorderThickness="0" IsChecked="{Binding 
                          RelativeSource={RelativeSource FindAncestor, 
                          AncestorType={x:Type ListViewItem}},
                          Path=IsSelected}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="FontFamily" Value="Segoe UI Light"/>
                                    <Setter Property="FontSize" Value="18"/>
                                    <Setter Property="Background" Value="{StaticResource WindowButtonColor}"/>
                                    <Setter Property="Foreground" Value="{StaticResource WindowForeColor}"/>
                                    <Setter Property="Margin" Value="0"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Padding" Value="0"/>

                                    <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border  x:Name="border1" BorderThickness="0" Margin="0" Padding="0" >
                                                    <TextBlock Padding="0" Margin="10,0,10,0"  HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding TaskName}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="{x:Type TextBlock}">
                                                                <Setter Property="RenderTransform">
                                                                    <Setter.Value>
                                                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter Property="RenderTransformOrigin">
                                                                    <Setter.Value>
                                                                        <Point X="0.5" Y="0.5"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <EventTrigger RoutedEvent="PreviewMouseDown">
                                                                        <EventTrigger.Actions>
                                                                            <BeginStoryboard>
                                                                                <Storyboard>
                                                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" To="0.95" Duration="0:0:0.15" AutoReverse="True" />
                                                                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" To="0.95" Duration="0:0:0.15" AutoReverse="True"/>
                                                                                </Storyboard>
                                                                            </BeginStoryboard>
                                                                        </EventTrigger.Actions>
                                                                    </EventTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                </Border>

                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background"  TargetName="border1"  Value="{StaticResource WindowButtonOverColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background"  TargetName="border1"  Value="{StaticResource WindowButtonForePressedColor}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Background"  TargetName="border1"  Value="{StaticResource WindowButtonForePressedColor}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>

                                            </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>


                            </ToggleButton>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>
    </ListView.ItemContainerStyle>


</ListView>
